<!--
    Powered By nodePPT - This is probably the best web presentation tool so far!
    version: 1.4.2
    site: https://github.com/ksky521/nodePPT
    date: 2016年8月5日
-->
<!doctype html>
<html>
<head>
    <meta charset="UTF-8">
    <title>WebGL - Three.js 分享 - By 齐俊鑫</title>
    <link rel="stylesheet" media="all" href="./css/nodeppt.css">
    <link rel="stylesheet" media="only screen and (max-device-width: 480px)" href="./css/phone.css">
    
    <link rel="stylesheet" href="./js/highlight/styles/monokai_sublime.css">
    <link rel="stylesheet" href="./css/font-awesome.css">
    
<link rel="stylesheet" href="./css/theme.dark.css">
</head>
<body>
<div class="slides">
    <slides id="container">
        <slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>WebGL - Three.js 分享</h1>
<h2>演讲者：齐俊鑫</h2>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<img src="http://p5.qhimg.com/t0196544840a24c37d7.png" style="max-height:800px"/>
<p><a href="http://www.newstech.jp/?sc=c" target="_blank">http://www.newstech.jp/?sc=c</a></p>
<p><a href="http://www.activation-nodeplus.com/" target="_blank">http://www.activation-nodeplus.com/</a></p>
<p><a href="http://threejs.org/" target="_blank">http://threejs.org/</a></p>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h1>教学大纲</h1>

</hgroup><article>

<ol>
<li><p>WebGL与Three.js</p>
</li>
<li><p>3D图形基础知识</p>
<ul>
<li>3D坐标系</li>
<li>网格、材质、纹理</li>
<li>相机</li>
<li>着色器</li>
</ul>
</li>
<li><p>Three.js实践</p>
<ul>
<li>渲染器 renderer</li>
<li>场景   scene</li>
<li>相机   camera</li>
<li>光源   light</li>
<li>网格   mesh</li>
<li>渲染   render</li>
</ul>
</li>
<li><p>3D动画</p>
<ul>
<li>RequestAnimationFrame()</li>
<li>补间动画</li>
<li>CSS3D动画 Animation</li>
<li>基于着色器的动画</li>
</ul>
</li>
</ol>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>WebGL与Three.js</h1>
<ul class="fadeIn">
<li><p style="margin:20px 0">OpenGL 是指定义了一个跨编程语言、跨平台的编程接口规格的专业的图形程序接口。它用于三维图像（二维的亦可），是一个功能强大，调用方便的底层图形库。</p></li>
<li><p style="margin-bottom:20px">WebGL 是Javascript的API，是一种网络标准，定义了一些较底层的图形接口，可以看做是将OpenGL移植到了网页平台的web规范</p></li>
<li><p style="margin-bottom:20px">Three.js</p></li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<p><h1>3D图形基础知识</h1></p>
<h2><h2>3D坐标系</h2></h2>
<div><img src="./image/256px-3D_coordinate_system.png" style="width:500px"></div>
</article></section></slide>
<slide class="slide" id="slide-mesh" data-on-enter=animateForMesh data-on-leave=clearMesh><section class="slide-wrapper"><hgroup>
<div id="mesh-title">
    <h1>3D图形基础知识</h1>
    <h2>网格、材质、纹理</h2>
</div>
</hgroup><article>

<div id="mesh-container"></div><div id="mesh-desc">
    <p>网格 mesh -> 模型</p>
    <p>几何体 geometry <small>用来勾勒出形状，保存了顶点位置信息</small></p>
    <p>材质 material <small>描述外观，包括色彩、反射、明暗等属性</small></p>
    <p>纹理 <small>使用一个或者多个位图来表示外观信息</small></p>
    <div id="addTexture">加纹理<div>

</div>
</article></section></slide>
<slide class="slide"   data-on-build="Slide.magic" data-on-enter="Slide.magic.init"><section class="slide-wrapper"><article class="flexbox vcenter">
<p><h1>3D图形基础知识</h1></p>
<p><h2>相机</h2></p>
<h2><small>相机定义了用户相对于场景的位置和朝向</small></h2>
<div class="magic"><div class="magicItem current pagedown" data-transition="fade"><article>
<div class="magic-wrapper">
<article>
<div>
    <img src="./image/graphics_fundamentals_viewport_3dscene.png" alt="">
</div><p style="margin-top:20px"><small>视野fov，近剪裁平面(视口)，远剪裁平面，视见体</small></p>
</article>
</div>
</article></div>
<div class="magicItem next pagedown" data-transition="fade"><article>
<div class="magic-wrapper">
<article>
<div>
    <p>PerspectiveCamera / OrthographicCamera</p>
    <p>透视相机 / 正投影相机</p>
    <img src="./image/camera.png" class="camera-img">
</div>
</article>
</div>
</article></div></div>
</article></section></slide>
<slide class="camera-demo slide" data-on-enter=initCameraDemo lass="camera-demo" data-on-leave=clearCameraDemo><section class="slide-wrapper"><article>
<div id="camera-container"></div><div id="change-camera">切换</div>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<p><h1>3D图形基础知识</h1></p>
<p><h2>着色器 Shader</h2></p>
<p style="margin-top:50px"><small>又称为“可编程着色器”，是一段源代码，实现了将网格像素点投影到屏幕上的算法</small></p>
<p><small>可以处理材质、光源、变换以及相机</small></p>
<p><small>Vertex Shader顶点着色器 和 Pixel Shader像素着色器</small></p>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h1>Three.js实践</h1>

</hgroup><article>

<ul class="fadeIn">
<li>渲染器 renderer</li>
<li>场景   scene</li>
<li>相机   camera</li>
<li>光源   light</li>
<li>网格   mesh</li>
<li>渲染   render</li>
</ul>

</article></section></slide>
<slide class="slide"   data-on-build="Slide.magic" data-on-enter="Slide.magic.init"><section class="slide-wrapper"><article>
<div id="demo-1-container"><img src="http://p3.qhimg.com/t01982f783fb3a017b6.png"/></div><div class="magic"><div class="magicItem current pagedown"  data-transition=zoomin><article>
<div class="magic-wrapper">
<article>
<h2><h4>创建渲染器renderer</h4></h2>
<p><pre><code class="javascript">
    renderer = new THREE.WebGLRenderer({antialias:true});
    renderer.setSize(container.offsetWidth,container.offsetHeight);
    container.appendChild(renderer.domElement);
</code></pre></p>
<div style="color:#fff;font-size:18px">
<p>CanvasRenderer 、 CSS3DRenderer 、 SVGRenderer ...</p>
</div>
</article>
</div>
</article></div>
<div class="magicItem next pagedown"  data-transition=zoomin><article>
<div class="magic-wrapper">
<article>
<h2><h4>创建场景</h4></h2>
<pre><code class="javascript">
    scene = new THREE.Scene();
</code></pre>
</article>
</div>
</article></div>
<div class="magicItem far-next pagedown"  data-transition=zoomin><article>
<div class="magic-wrapper">
<article>
<h2><h4>创建相机</h4></h2>
<pre><code class="javascript">
    var aspect = container.offsetWidth/container.offsetHeight;
    camera = new THREE.PerspectiveCamera(45,aspect,1,1000);
    camera.position.z = 550;
    camera.lookAt(scene.position);
    scene.add(camera);
</code></pre>
</article>
</div>
</article></div>
<div class="magicItem "  data-transition=zoomin><article>
<div class="magic-wrapper">
<article>
<h2><h4>创建光源</h4></h2>
<p><pre><code class="javascript">
    light = new THREE.DirectionalLight(0xf0f0f0);
    light.position.set(0,0,5);
    scene.add(light);
</code></pre></p>
<div style="color:#fff;font-size:18px">
<p>定向光 环境光  聚光灯  点光源</p>
</div>
</article>
</div>
</article></div>
<div class="magicItem "  data-transition=zoomin><article>
<div class="magic-wrapper">
<article>
<h2><h4>创建网格</h4></h2>
<p><pre><code class="javascript">
    var geometry = new THREE.BoxGeometry(200,200,200);
    var texture = new THREE.TextureLoader().load(&#39;/image/texture.jpg&#39;);
    var material = new THREE.MeshLambertMaterial( {map:texture});
    cube = new THREE.Mesh( geometry, material);
    scene.add(cube);
</code></pre></p>
<div style="color:#fff;font-size:18px">
MeshBasicMaterial 、 MeshLambertMaterial 、 MeshPhongMaterial
</div>
</article>
</div>
</article></div>
<div class="magicItem "  data-transition=zoomin><article>
<div class="magic-wrapper">
<article>
<h2><h4>渲染</h4></h2>
<pre><code class="javascript">
    renderer.render(scene,camera)
</code></pre>
</article>
</div>
</article></div></div>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<p style="margin-bottom:30px"><a href="http://codepen.io/qijunxin/pen/kkkkrz?editors=0010" target="_blank">没记住？戳我试试</a></p>
<p><a href="http://codepen.io/qijunxin/pen/wzWLvr?editors=0010" target="_blank">太简单？都记住了</a></p>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h1>3D动画</h1>

</hgroup><article>

<ul>
<li>RequestAnimationFrame()</li>
<li>补间动画</li>
<li>CSS3D动画 Animation</li>
<li>基于着色器的动画</li>
</ul>

</article></section></slide>
<slide class="slide" data-on-enter=RAFDemo data-on-leave=clearRAF><section class="slide-wrapper"><article>
<p><h2 class="raf-title">RequestAnimationFrame()</h2 class="raf-title"></p>
<div  id="raf-demo"></div><pre><code class="javascript">
    function animate() {
        requestAnimationFrame( animate );
        mesh.rotation.y += 0.005;
        renderer.render( scene, camera );
    }
</code></pre>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<p><h2>补间动画</h2></p>
<p><small>补间指的是计算一对值中间插入的其它数值的过程。</small></p>
<p><small>由一个状态切换到另一个状态的一次性简单动画</small></p>
<p><pre><code class="javascript">
    new TWEEN.Tween(group.position)
        .to( {x:2, y:2, z:-3}, duration<em>1000 )
        .delay( delayTime</em>1000 )
        .easing( TWEEN.Easing.Exponential.InOut )
        .repeat( repeatCount )
        .start();
    }
    TweenMax.to(group.position, 
        duration, 
        {y:0, ease:Strong.easeInOut, yoyo:true, repeat:repeatCount});</p>
<p></code></pre>
<a href="http://codepen.io/qijunxin/pen/qaNzQZ?editors=0010" style="font-size:22px" target="_blank">我要看例子！</a></p>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<p><h2>CSS3D动画 Animation</h2>
<a href="http://codepen.io/qijunxin/pen/pEEbXK?editors=0110" target="_blank" style="margin-top:100px">举个栗子</a></p>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<p><h2>基于着色器的动画</h2>
<a href="http://codepen.io/qijunxin/pen/ZppOVr?editors=1010" target="_blank" style="margin-top:100px">去看看</a></p>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>Q&amp;A</h1>
</article></section></slide>
        

        <!-- <slide class="slide logoslide dark nobackground">
            <article class="flexbox vcenter">
                <h2 style="color: white;">Powered By nodePPT v1.4.2</h2>
            </article>
        </slide> -->
        <div class="slideTip" id="tip"></div>
    </slides>
</div>
<canvas id="drawBoard" class="draw-board" width="900" height="700"></canvas>
<div class="progress"><span id="progress"></span></div>
<div id="_buttons">
    <div class="_btn-box" id="_btn-box" style="display:none;">
        <button class="fa fa-arrow-circle-left" id="_btn-prev"></button>
        <button class="fa fa-arrow-circle-right" id="_btn-next"></button>
        <button class="fa fa-paint-brush" id="_btn-brush"></button>
        <button class="fa fa-compress" id="_btn-overview" data-toggle="fa fa-expand"></button>
    </div>
    <button class="fa fa-bars" id="_btn-bar"  data-toggle="fa fa-close"></button>
</div>
<script src="./js/mixjs/lib/mix.0.3.0.min.js"></script>
<script>
var base = location.protocol + '//' + location.host;

var path = (location.pathname + '#').split('/').filter(function(v){
    return !!v;
});
path.pop();
path = path.join('/');
MixJS.config({
    baseURL: [ base, path, 'js'].join('/')+'/'
});

</script>
<script src="./js/mixjs/lib/event/broadcast.js"></script>
<script src="./js/nodeppt.js"></script>
<script>
Slide.init({
    containerID: 'container',
    drawBoardID: 'drawBoard',
    slideClass: '.slide',
    buildClass: '.build',
    progressID: 'progress',
    transition: 'slide3',
    width: 1100,
    dir: './',
    
    //打开下面的注释就开启postMessage方式
    //访问网址127.0.0.1:8080/ppt/demo#client
    control:{
        type: 'postMessage',
        args:{
            isControl:  false
        }
    },
    
    tipID: 'tip'
});
MixJS.loadJS('highlight/highlight.pack.js',function(){
    hljs.tabReplace = '  ';
    hljs.initHighlightingOnLoad();
});
</script>
<script src="./js/three.js"></script>
<script src="./js/tween.min.js"></script>
<script src="./js/CSS3DRenderer.js"></script>
<script src="./js/TrackballControls.js"></script>
<script src="./js/TweenMax.min.js"></script>
<script src="./js/CSS3DRenderer.js"></script>
<script src="./js/index.js"></script>
<link rel="stylesheet" href="./css/index.css">

<!--placeholder-->
</body>
</html>
